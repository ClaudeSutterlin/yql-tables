<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <description>
            Queries the Yahoo CSV historical data service to obtain past price
            and dividend history. Provide:

              * symbol(s)
              * startDate as YYYY-MM-DD
              * endDate as YYYY-MM-DD (defaults to today GMT)
              * granularity (the g parameter), which may be 'd', 'w',
                or 'm', corresponding to daily, weekly, or monthly,
                or 'v', meaning just return dividends paid

            Each element in the returned array consists of date, open, high,
            low, close, volume, and adjusted close, except for g='v', which
            returns only the date and the dividend amount.
        </description>
        <sampleQuery>
            select * from {table} where symbol in ("AAPL","GOOGL","YHOO")
                and g='m'
                and startDate='2014-01-01' and endDate='2015-01-01'
        </sampleQuery>
    </meta>
    <bindings>
        <select itemPath="" produces="XML">
            <urls><url></url></urls>
            <inputs>
                <key id='symbol' type='xs:string' paramType='path'
                                                    required='true'/>
                <key id='g' type='xs:string' paramType='variable'
                                                    required='true'/>
                <key id='startDate' type='xs:string' paramType='variable'
                                                    required='true'/>
                <key id='endDate' type='xs:string' paramType='variable'
                                                    required='false'/>
            </inputs>
            <execute><![CDATA[
//%begin-include lib/parseDate.js
// Returns the year, month, and day corresponding to the input date,
// which should be in the form yyyy-mm-dd. Returns today's date if
// date omitted.
function parseDate(date) {
    var d = new Date;
    if (date) {
        var m = date.match(/^(\d\d\d\d)-(\d+)-(\d+)$/);
        if (!m)
            throw "Invalid date: '" + date + "'";
        var d = new Date(m[1], m[2]-1, m[3]);
    }
    return {y:d.getFullYear(), m:d.getMonth(), d:d.getDate()};
}
//%end-include eb3a754dc5c86babc736a5d5381bca1e618e3ac0

var s = parseDate(startDate);
var e = parseDate(endDate);
var url = "http://ichart.yahoo.com/table.csv?s=" + symbol +
                '&a=' + s.m + '&b=' + s.d + '&c=' + s.y +
                '&d=' + e.m + '&e=' + e.d + '&f=' + e.y + '&g=' + g;
var columns = g != 'v' ? "Date,Open,High,Low,Close,Volume,AdjClose"
                       : "Date,Dividends";
var results = y.query("select * from csv where url='" + url +
            "' and columns='" + columns + "'").results;
results.@symbol = symbol;
response.object = results;
      ]]></execute>
        </select>
    </bindings>
</table>
